.keyboard {
    position: fixed;/*要素の位置を固定します。スクロールしても要素は画面上の同じ位置に留まります。*/
    left: 0;
    bottom: 0;
    width: 100%;
    padding: 5px 0;
    background: #004134;
    box-shadow: 0 0 50px rgba(0, 0, 0, 0.5);
    user-select: none;/* ユーザーが要素のテキストを選択できないようにします。*/
    transition: bottom 0.4s;/*bottomプロパティの変化を0.4秒かけてアニメーション化します。これにより、bottomプロパティが変更されたときに滑らかな遷移が得られます*/
}

.keyboard--hidden {/*"keyboard--hidden"クラスを要素に適用すると、その要素は画面下部から完全に隠れ、ユーザーがキーボードを閉じると要素が再び表示されることになります。この方法はユーザーエクスペリエンスを向上させるためによく使用されます。*/
    bottom: -100%;
}
.keyboard__keys{
    text-align: center;
}

.keyboard__key{
    height: 45px;
    width: 6%;
    max-width: 90px;
    margin: 3px;
    border: noen;
    background-color: rgba(255,255,255,0.2);
    color: #ffffff;
    font-size: 1.05rem;
    outline: none;
    cursor: pointer;
    display: inline-flex;/*垂直方向と水平方向に完全に中央に配置する*/
    align-items: center;
    justify-content: center;
    vertical-align: top;
    padding: 0;
    -webkit-tap-highlight-color: transparent;
    position: relative;
}


.keyboard__key:active {
    background: rgba(255, 255, 255, 0.12);
}

.keyboard__key--wide {/*違うキーの長さを作っておく*/
    width: 12%;
}

.keyboard__key--extra-wide {
    width: 36%;
    max-width: 500px;
}

.keyboard__key--activatable::after {
    content: '';
    top: 10px;
    right: 10px;
    position: absolute;
    width: 8px;
    height: 8px;
    background: rgba(0, 0, 0, 0.4);
    border-radius: 50%;
}

.keyboard__key--active::after {
    background: #08ff00;
}

.keyboard__key--dark {
    background: rgba(0, 0, 0, 0.25);
}
