* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.app{
  height: 100vh;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  font-family: "Montserrat", sans-serif;
}
.time-select,
.sound-picker{
height: 80%;
flex: 1;
display: flex;
flex-direction: column;
justify-content: space-evenly;
align-items: center;
}

.time-select button,
.sound-picker button {
  color: white;
  width: 30%;
  height: 10%;
  background: none;
  font-size: 20px;
  border-radius: 5px;
  cursor: pointer;
  border: 2px solid white;
  transition: all 0.5s ease;
}

.sound-picker button {
  border: none;
  height: 120px;
  width: 120px;
  padding: 30px;
  border-radius: 50%;
}
.sound-picker button:nth-child(1) {
  background: #4972a1;
}
.sound-picker button:nth-child(2) {
  background: #a14f49;
}
.sound-picker button img {
  height: 100%;
}

.time-select button:hover{
  background-color: white;
  color: black;
}

.player-container {
  position: relative;
  height: 80%;
  display: flex;
  justify-content: space-evenly;/*均等にできる*/
  align-items: center;
  flex-direction: column;
  flex: 1;
}
.player-container svg{/*"position: absolute"を使用することで、SVG要素はページ内の他の要素と重なることができ、指定された位置に配置されます。このスタイルルールを使用することで、SVG要素の表示位置を制御できます。*/
  position: absolute;
  height: 50%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%)rotate(-90deg);/*要素をさらに移動して中心を揃え、-90度（時計回り）に回転させます。translate(-50%, -50%)は要素自体の中心を基準にして、要素を左上に50%ずつ移動します。これにより、要素の中心が親要素の中心に配置されます。*/
  pointer-events: none;/*要素がマウスイベント（クリック、ホバーなど）を無視するように設定します。これにより、要素の上にマウスを置いても、その下にある要素がマウスイベントを受け取ることができます。*/
}



.time-display{
color: white;
position: absolute;
font-size: 50px;
bottom: 10%;
}
video{
position: fixed;
top: 0%;
left: 0%;
width: 100%;
z-index: -10;/*背景は一番後ろにしたい これを使う*/
}